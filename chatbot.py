# -*- coding: utf-8 -*-
"""chatbot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uPvxdbvMUaVk6w_vrFppKn-jVTLRc0L1
"""

import os
import nltk
import ssl
import streamlit as st
import random
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression

ssl._create_default_https_context=ssl._create_unverified_context
nltk.data.path.append(os.path.abspath("nltk_data"))
nltk.download('punkt')

import json
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression

# Load intents from a JSON file
with open(r'C:\Users\User\NLP\intents.json', 'r') as file:
    intents = json.load(file)

tags = []
patterns = []

# Loop through the intents
for intent in intents['intents']:  # Accessing the 'intents' key in the loaded JSON
    for pattern in intent['patterns']:
        tags.append(intent['tag'])  # Accessing 'tag' key correctly
        patterns.append(pattern)

# Create vectorizer and classifier
vectorizer = TfidfVectorizer()
clf = LogisticRegression(random_state=0, max_iter=10000)

# Transform patterns into TF-IDF features
X = vectorizer.fit_transform(patterns)
y = tags

# Train the classifier
clf.fit(X, y)

# Now you can use clf to make predictions or evaluate performance

def chatbot(input_text):
    input_text=vectorizer.transform([input_text])
    tag= clf.predict(input_text)[0]
    for intent in intents:
        if intent[tag]==tag:
            response=random.choice(intent['responses'])
            return response

import streamlit as st

def main():
    st.title("MENSTRUAL HEALTH AWARENESS CHATBOT")
    st.write("WELCOME TO CHATBOT")

    # Initialize counter at the beginning of the function
    counter = 0
    counter += 1
    user_input = st.text_input("you:", key=f"user_input_{counter}")

    if user_input:
        # Process user input here
        pass

if __name__ == '__main__':
    main()